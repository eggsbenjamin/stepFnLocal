// Code generated by MockGen. DO NOT EDIT.
// Source: factory.go

// Package sfn is a generated GoMock package.
package sfn

import (
	state "github.com/eggsbenjamin/stepFnLocal/state"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockStateFactory is a mock of StateFactory interface
type MockStateFactory struct {
	ctrl     *gomock.Controller
	recorder *MockStateFactoryMockRecorder
}

// MockStateFactoryMockRecorder is the mock recorder for MockStateFactory
type MockStateFactoryMockRecorder struct {
	mock *MockStateFactory
}

// NewMockStateFactory creates a new mock instance
func NewMockStateFactory(ctrl *gomock.Controller) *MockStateFactory {
	mock := &MockStateFactory{ctrl: ctrl}
	mock.recorder = &MockStateFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStateFactory) EXPECT() *MockStateFactoryMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockStateFactory) Create(arg0 state.Definition) (State, error) {
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(State)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *MockStateFactoryMockRecorder) Create(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockStateFactory)(nil).Create), arg0)
}
